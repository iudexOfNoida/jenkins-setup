name: obejctName and cppcheck scan

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  cppcheck:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 2
          
      - name: Install cppcheck
        run: sudo apt-get install cppcheck -y

      - name: Fetch latest changes from origin
        run: git fetch origin

      - name: Find changed QML files
        id: find-qml-files
        run: |
          echo "Finding changed QML files..."
          qml_files=$(git diff --name-status HEAD~1 HEAD | awk '$1 ~ /^[AM]/ {print $2}' | grep -E '\.qml$' | tr '\n' ' ')
          echo "qml_files=${qml_files}" >> $GITHUB_ENV
          echo "Changed QML files: ${qml_files}"

      - name: Parse QML files for changes
        id: parse-qml
        run: |
          echo "Parsing QML files for id and objectName changes..."
          ids_and_names=""
          for file in ${qml_files}; do
            ids=$(git diff HEAD~1 HEAD -- "$file" | grep -E '^\+\s*id\s*:' | sed 's/^+\s*id\s*:\s*//')
            object_names=$(git diff HEAD~1 HEAD -- "$file" | grep -E '^\+\s*objectName\s*:' | sed 's/^+\s*objectName\s*:\s*//')
            if [ ! -z "$ids" ] || [ ! -z "$object_names" ]; then
              ids_and_names=$("{ids_and_names}\n$file:\nids:\n${ids}\nobjectNames:\n${object_names}\n")
            fi
          done
          echo "ids_and_names=${ids_and_names}" >> $GITHUB_ENV
          echo "Changed ids and names: ${ids_and_names}"

      - name: Post PR comment
        uses: actions/github-script@v3
        with:
          script: |
            const ids_and_names = process.env.ids_and_names;
            if (ids_and_names) {
              const comment = `Changed QML files and their ids and objectNames:\n${ids_and_names}`;
              github.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            } else {
              console.log("No id or objectName changes found.");
            }

      - name: Find changed C++ files
        id: find-files
        run: |
          echo "Finding changed C++ files..."
          cpp_files=$(git diff --name-status HEAD~1 HEAD | awk '$1 ~ /^[AM]/ {print $2}' | grep -E '\.cpp$|\.h$' | tr '\n' ' ')
          echo "cpp_files=${cpp_files}" >> $GITHUB_ENV
          echo "Changed C++ files: ${cpp_files}"
    
      - name: Run cppcheck on modified files
        if: env.cpp_files != ''
        run: |
          echo "Running cppcheck on modified files..."
          cppcheck --enable=all --error-exitcode=1 --force --inline-suppr --quiet ${cpp_files}

